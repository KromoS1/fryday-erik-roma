{"version":3,"sources":["app/AppStyle.module.scss","reportWebVitals.ts","api/api.ts","features/Profile/profile-reducer.ts","features/Login/login-reducer.ts","features/Registration/registration-reducer.ts","features/utils/utils.tsx","features/RecoveryPassword/recovery-password-reducer.ts","features/NewPassword/new-password-reducer.ts","app/store.ts","components/Error404/Error404.tsx","features/CommonComponentsForm/FieldComponent.tsx","features/Registration/Registration.tsx","features/Login/Login.tsx","features/NewPassword/NewPassword.tsx","features/RecoveryPassword/RecoveryPassword.tsx","features/Profile/Profile.tsx","features/Profile/ProfileContainer.tsx","components/Preloader/Preloader.tsx","components/ChekEmail/ChekEmail.tsx","features/Routes.tsx","app/App.tsx","index.tsx","features/Login/LoginStyle.module.scss","features/RecoveryPassword/RecoveryPasswordStyle.module.scss","features/Registration/RegistrationStyle.module.scss","features/CommonComponentsForm/FieldComponentStyle.module.scss","features/NewPassword/NewPasswordStyle.module.scss","components/Preloader/Preloader.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","axiosInstance","axios","create","baseURL","withCredentials","authApi","params","post","delete","response","data","res","setUserData","userData","type","payload","InitialState","_id","email","name","avatar","publicCardPacksCount","created","updated","isAdmin","rememberMe","verified","isAuth","isInitialize","setIsAuth","error","getRegistration","dispatch","catch","err","errMessage","message","isSend","initialState","setPasswordStatus","setNewPasswordStatus","status","rootReducer","combineReducers","profile","state","action","login","isInit","registrationInfo","recovery","sendStatus","creatingPasswordInfo","store","createStore","applyMiddleware","thunk","window","Error404","React","memo","fieldComponent","placeholder","Item","className","style","field","rules","required","size","input","min","hasFeedback","Password","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","formItemLayout","labelCol","xs","span","sm","wrapperCol","FormRegistration","props","Form","useForm","form","registration","title","titleName","onFinish","values","onSubmit","buttons","btnCan","btnReg","Registration","useDispatch","password","LoginForm","forgot","to","btnLogin","signUp","Login","useSelector","loginParams","e","console","log","NewPasswordForm","newPasswordMain","btnSetPass","NewPasswordComponent","token","useParams","resetPasswordToken","finally","FormRecoveryPassword","recoveryPassword","subtitle","btnSend","RecoveryPassword","recoveryParams","from","Profile","onClick","logOut","ProfileContainer","info","Preloader","s","preloader","preloader__image_animate","ChekEmail","PATH","Routes","useEffect","a","me","path","exact","render","App","page","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6df93a27.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"page\":\"AppStyle_page__1eeP1\"};","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import axios from 'axios';\r\n\r\nexport type ProfileType = {\r\n    _id: string\r\n    email: string\r\n    rememberMe: boolean\r\n    isAdmin: boolean\r\n    name: string\r\n    verified: boolean\r\n    publicCardPacksCount: number\r\n    created: string\r\n    updated: string\r\n}\r\n\r\nexport type ResponseMeType = ProfileType & {\r\n    avatar?: string\r\n}\r\n\r\nexport type ResponseAuthType = ProfileType & {\r\n    token?: string\r\n    tokenDeathTime?: number\r\n    __v: number\r\n}\r\n\r\nexport type ResponseErrorRegistrationType = {\r\n    error: string,\r\n    email: string\r\n}\r\n\r\nexport type ParamsAuthType = {\r\n    email: string\r\n    password: string\r\n}\r\n\r\nexport type ParamsForgotType = {\r\n    email: string\r\n    from: string\r\n    message: string\r\n}\r\n\r\nexport type ResponseForgotType = {\r\n    info: string\r\n    error: string\r\n}\r\n\r\nexport type ParamsSetNewPasswordType = {\r\n    password: string\r\n    resetPasswordToken: string\r\n}\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: 'https://neko-back.herokuapp.com/2.0',\r\n    withCredentials: true,\r\n})\r\n\r\nexport const authApi = {\r\n    login(params: ParamsAuthType) {\r\n        return axiosInstance.post<ResponseAuthType>('/auth/login', {...params})\r\n    },\r\n    logout() {\r\n        return axiosInstance.delete<{ info: string }>('/auth/me')\r\n    },\r\n    registration(params: ParamsAuthType) {\r\n        return axiosInstance.post<ResponseAuthType | ResponseErrorRegistrationType>('/auth/register', {...params})\r\n            .then(response => response.data)\r\n    },\r\n    me(){\r\n        return axiosInstance.post('/auth/me')\r\n            .then(response => response.data);\r\n    },\r\n    forgot(params: ParamsForgotType) {\r\n        return axiosInstance.post<ResponseForgotType>('/auth/forgot', {...params})\r\n    },\r\n    setNewPassword(params: ParamsSetNewPasswordType) {\r\n       return axiosInstance.post<{info: string}>('/auth/set-new-password', params)\r\n           .then(res =>  res.data)\r\n    }\r\n}\r\n","import {authApi, ResponseMeType} from '../../api/api';\r\nimport {AppThunkType} from '../../app/store';\r\nimport {setIsAuth} from '../Login/login-reducer';\r\n\r\nexport type ProfileReducerActionTypes = | ReturnType<typeof setUserData>\r\n\r\nexport const setUserData = (userData: ResponseMeType) =>\r\n    ({type: 'PROFILE/SET_USER_DATA', payload: {...userData}} as const)\r\n\r\nconst InitialState: ResponseMeType = {\r\n    _id: '',\r\n    email: '',\r\n    name: '',\r\n    avatar: '',\r\n    publicCardPacksCount: 0,\r\n    created: '',\r\n    updated: '',\r\n    isAdmin: false,\r\n    rememberMe: false,\r\n    verified: true,\r\n}\r\n\r\nexport const profileReducer = (state = InitialState, action: ProfileReducerActionTypes) => {\r\n    switch (action.type) {\r\n        case 'PROFILE/SET_USER_DATA':\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const meProfile = (): AppThunkType => dispatch => {\r\n    authApi.me().then(res => {\r\n       if (res){\r\n           dispatch(setIsAuth(true));\r\n       }\r\n    })\r\n}\r\n\r\n","import {AppThunkType} from '../../app/store';\r\nimport {authApi, ParamsAuthType} from '../../api/api';\r\nimport {setUserData} from '../Profile/profile-reducer';\r\n\r\nexport type LoginAT =\r\n    | ReturnType<typeof setIsAuth>\r\n    | ReturnType<typeof setIsInit>\r\n\r\n\r\nexport type LoginType = {\r\n    isAuth: boolean\r\n    isInitialize: boolean\r\n}\r\n\r\nconst InitialState: LoginType = {\r\n    isAuth: false,\r\n    isInitialize: false\r\n}\r\n\r\nexport const setIsAuth = (isAuth: boolean) => ({type: 'LOGIN/SET_IS_AUTH', isAuth} as const)\r\nexport const setIsInit = (isInit: boolean) => ({type: 'LOGIN/SET_IS_INITIALIZE', isInit} as const)\r\n\r\nexport const loginReducer = (state = InitialState, action: LoginAT): LoginType => {\r\n    switch (action.type) {\r\n        case 'LOGIN/SET_IS_AUTH':\r\n            return {...state, isAuth: action.isAuth}\r\n        case 'LOGIN/SET_IS_INITIALIZE':\r\n            return {...state, isInitialize: action.isInit}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const loginAccount = (loginParams: ParamsAuthType): AppThunkType => dispatch => {\r\n    authApi.login(loginParams)\r\n        .then(res => {\r\n            dispatch(setUserData(res.data));\r\n            dispatch(setIsAuth(true));\r\n        })\r\n        .catch(e => {\r\n            const error = e.response ? e.response.data.error : (e.message + ', more details in the console');\r\n            console.log(error);\r\n        })\r\n};\r\n\r\nexport const logoutAccount = (): AppThunkType => dispatch => {\r\n    authApi.logout()\r\n        .then(res => {\r\n            if (res.data.info) {\r\n                dispatch(setIsAuth(false));\r\n            }\r\n        })\r\n}\r\n\r\nexport const initializeApp = (): AppThunkType => async dispatch => {\r\n    try {\r\n        const me = await authApi.me();\r\n        if (me) {\r\n            dispatch(setUserData(me));\r\n            dispatch(setIsAuth(true));\r\n        } else {\r\n            console.log('error')\r\n        }\r\n\r\n    } catch (e) {\r\n\r\n        console.log(e);\r\n    } finally {\r\n        dispatch(setIsInit(true));\r\n    }\r\n}","import {authApi, ParamsAuthType} from '../../api/api';\r\nimport {AppThunkType} from '../../app/store';\r\nimport {redirectLogin} from '../utils/utils';\r\n\r\nexport type RegistrationTypes = {\r\n    error: string | null\r\n}\r\n\r\nexport type RegistrationAT = ReturnType<typeof setIsRegistered>\r\n\r\nconst InitialState: RegistrationTypes = {\r\n    error: null\r\n}\r\n\r\nexport const registrationReducer = (state = InitialState, action: RegistrationAT): RegistrationTypes => {\r\n    switch (action.type) {\r\n        case \"REGISTRATION/GET_REGISTERED_REQUEST\": {\r\n            return {...state, error: action.error}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const setIsRegistered = (isRegistered: boolean, error: string | null) =>\r\n    ({type: 'REGISTRATION/GET_REGISTERED_REQUEST', error} as const);\r\n\r\nexport const getRegistration = (params: ParamsAuthType): AppThunkType => dispatch => {\r\n    authApi.registration(params)\r\n        .then(res => {\r\n            if (res) {\r\n                redirectLogin();\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const errMessage = err.response ? `${err.message} \\n ${err.response.data.error}` : 'some error has occurred';\r\n            dispatch(setIsRegistered(false, errMessage));\r\n        })\r\n\r\n}\r\n\r\n","import {Redirect} from 'react-router-dom';\r\n\r\nexport const redirectLogin = () => {\r\n    return <Redirect to={\"/login\"}/>\r\n}\r\n\r\nexport const RecoveryMessage = () => {\r\n    return (\r\n        `<div>\r\n            <span>Follow the link to set a new password:</span>\r\n            <a href=\"http://localhost:3000/#/set-new-password/$token$\">link</a>\r\n        </div>`\r\n    )\r\n}","import {AppThunkType} from \"../../app/store\";\r\nimport {authApi, ParamsForgotType} from \"../../api/api\";\r\n\r\nexport type RecoveryPasswordType = {\r\n    isSend: boolean\r\n}\r\n\r\nconst InitialState: RecoveryPasswordType = {\r\n    isSend: false\r\n}\r\n\r\nexport type RecoveryPasswordAT =\r\n    |ReturnType<typeof setSendStatus>\r\n\r\nexport const setSendStatus = (sendStatus: boolean) => ({type: \"RECOVERY/SET_SEND_STATUS\", sendStatus} as const)\r\n\r\nexport const recoveryPasswordReducer = (state = InitialState, action: RecoveryPasswordAT): RecoveryPasswordType => {\r\n    switch (action.type) {\r\n        case \"RECOVERY/SET_SEND_STATUS\":\r\n            return {...state, isSend: action.sendStatus}\r\n        default:\r\n            return state\r\n    }\r\n};\r\n\r\nexport const recoveryPassword = (recoveryParams: ParamsForgotType): AppThunkType => dispatch => {\r\n    authApi.forgot(recoveryParams)\r\n        .then(res => {\r\n            dispatch(setSendStatus(true));\r\n            console.log(res);\r\n        })\r\n        .catch(err => {\r\n            console.log(err);\r\n        })\r\n}","import {authApi, ParamsSetNewPasswordType} from \"../../api/api\";\r\nimport {AppThunkType} from \"../../app/store\";\r\n\r\nexport type NewPasswordTypes = {\r\n    setPasswordStatus: boolean\r\n}\r\n\r\nexport type NewPasswordAT = ReturnType<typeof setNewPasswordStatus>\r\n\r\nconst initialState: NewPasswordTypes = {\r\n    setPasswordStatus: false\r\n}\r\n\r\nexport const setNewPasswordStatus = (status: boolean) => ({type: 'PASSWORD/SET_CHANGED_STATUS', status} as const)\r\n\r\nexport const newPasswordReducer = (state = initialState, action: NewPasswordAT): NewPasswordTypes => {\r\n    switch (action.type) {\r\n        case \"PASSWORD/SET_CHANGED_STATUS\":\r\n            return {...state, setPasswordStatus: action.status}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setNewPassword = (params: ParamsSetNewPasswordType): AppThunkType => dispatch => {\r\n    authApi.setNewPassword(params)\r\n        .then(res => {\r\n            if (res) {\r\n                dispatch(setNewPasswordStatus(true));\r\n            }\r\n        })\r\n        .catch(err => {\r\n            const errMessage = err.response ? `${err.message} \\n ${err.response.data.error}` : 'some error has occurred';\r\n            dispatch(setNewPasswordStatus(false));\r\n            console.log(errMessage);\r\n        }).finally(() => {\r\n        dispatch(setNewPasswordStatus(false));\r\n    })\r\n}\r\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunk, {ThunkAction} from \"redux-thunk\";\r\nimport {loginReducer, LoginAT} from \"../features/Login/login-reducer\";\r\nimport {registrationReducer, RegistrationAT} from \"../features/Registration/registration-reducer\";\r\nimport {profileReducer, ProfileReducerActionTypes} from \"../features/Profile/profile-reducer\";\r\nimport {recoveryPasswordReducer,RecoveryPasswordAT } from \"../features/RecoveryPassword/recovery-password-reducer\";\r\nimport {newPasswordReducer, NewPasswordAT} from \"../features/NewPassword/new-password-reducer\";\r\nimport {AppReducerActionTypes} from \"./app-reducer\";\r\n\r\n\r\nexport const rootReducer = combineReducers({\r\n    profile: profileReducer,\r\n    login: loginReducer,\r\n    registrationInfo: registrationReducer,\r\n    recovery: recoveryPasswordReducer,\r\n    creatingPasswordInfo:  newPasswordReducer\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppRootStateType = ReturnType<typeof rootReducer>\r\n\r\nexport type AppActionsType =\r\n    | AppReducerActionTypes\r\n    | LoginAT\r\n    | RegistrationAT\r\n    | ProfileReducerActionTypes\r\n    | RecoveryPasswordAT\r\n    | NewPasswordAT\r\n\r\nexport type AppThunkType<ReturnType = void> = ThunkAction<ReturnType, AppRootStateType, unknown, AppActionsType>\r\n\r\n//@ts-ignore\r\nwindow.store = window","import React from 'react'\r\n\r\n\r\nexport const Error404: React.FC = React.memo(() => {\r\n    return (\r\n        <>\r\n            <h1>404 Not found</h1>\r\n        </>\r\n    )\r\n})","import React from 'react'\r\nimport {Form, Input} from 'antd';\r\nimport style from './FieldComponentStyle.module.scss';\r\n\r\n\r\nexport const fieldComponent = (name: string, placeholder: string) => {\r\n    if (name === 'email') {\r\n        return <Form.Item\r\n            className={style.field}\r\n            name={name}\r\n            rules={[\r\n                {\r\n                    type: 'email',\r\n                    message: 'The input is not valid E-mail!',\r\n                },\r\n                {\r\n                    required: true,\r\n                    message: 'Please input your E-mail!',\r\n                },\r\n            ]}>\r\n            <Input placeholder={placeholder} size={'large'} className={style.input}/>\r\n        </Form.Item>\r\n    } else if (name === 'password') {\r\n        return <Form.Item\r\n            className={style.field}\r\n            name={name}\r\n            rules={[\r\n                {\r\n                    min: 8,\r\n                    message: \"Password should be more than 8 character\",\r\n                },\r\n                {\r\n                    required: true,\r\n                    message: 'Please input your password!',\r\n                },\r\n            ]}\r\n            hasFeedback\r\n        >\r\n            <Input.Password placeholder={placeholder} size={'large'} className={style.input}/>\r\n        </Form.Item>\r\n    } else if (name === 'confirm') {\r\n        return <Form.Item\r\n            className={style.field}\r\n            name={name}\r\n            dependencies={['password']}\r\n            hasFeedback\r\n            rules={[\r\n                {\r\n                    required: true,\r\n                    message: 'Please confirm your password!',\r\n                },\r\n                ({getFieldValue}) => ({\r\n                    validator(_, value) {\r\n                        if (!value || getFieldValue('password') === value) {\r\n                            return Promise.resolve();\r\n                        }\r\n\r\n                        return Promise.reject(new Error('The two passwords that you entered do not match!'));\r\n                    },\r\n                }),\r\n            ]}\r\n        >\r\n            <Input.Password placeholder={placeholder} size={'large'} className={style.input}/>\r\n        </Form.Item>\r\n    }\r\n}\r\n","import React, {FC} from 'react';\r\nimport style from './RegistrationStyle.module.scss'\r\nimport {Form} from 'antd';\r\nimport 'antd/dist/antd.css';\r\nimport {fieldComponent} from '../CommonComponentsForm/FieldComponent';\r\nimport {useDispatch} from 'react-redux';\r\nimport {getRegistration} from './registration-reducer';\r\n\r\ninterface ValuesType {\r\n    email: string\r\n    password: string\r\n    confirmPassword: string\r\n}\r\n\r\ntype PropsType = {\r\n    onSubmit: (data: ValuesType) => void\r\n}\r\n\r\n\r\nexport const formItemLayout = {\r\n    labelCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 24,\r\n        },\r\n    },\r\n    wrapperCol: {\r\n        xs: {\r\n            span: 24,\r\n        },\r\n        sm: {\r\n            span: 24,\r\n        },\r\n    },\r\n};\r\n\r\n\r\nexport const FormRegistration: FC<PropsType> = props => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: ValuesType) => {\r\n        props.onSubmit(values);\r\n    };\r\n\r\n    return (\r\n        <div className={style.registration}>\r\n            <div className={style.title}>Cards</div>\r\n            <div className={style.titleName}>\r\n                <h3>Sign Up</h3>\r\n            </div>\r\n            <Form name={'register'}\r\n                  className={style.form}\r\n                  {...formItemLayout}\r\n                  form={form}\r\n                  onFinish={onFinish}>\r\n                {fieldComponent('email', 'E-mail')}\r\n                {fieldComponent('password', 'Password')}\r\n                {fieldComponent('confirm', 'Confirm Password')}\r\n                <div className={style.buttons}>\r\n                    <button className={style.btnCan}>\r\n                        Cancel\r\n                    </button>\r\n                    <button className={style.btnReg} type=\"submit\">\r\n                        Register\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport const Registration = () => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const sendData = (data: ValuesType) => {\r\n        let {email,password} = data;\r\n        dispatch(getRegistration({email,password}))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormRegistration onSubmit={sendData}/>\r\n        </>\r\n    )\r\n\r\n\r\n}","import React, {FC, memo} from 'react'\r\nimport {Form} from 'antd';\r\nimport style from './LoginStyle.module.scss';\r\nimport {fieldComponent} from '../CommonComponentsForm/FieldComponent';\r\nimport {formItemLayout} from '../Registration/Registration';\r\nimport {NavLink, Redirect} from 'react-router-dom';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {loginAccount} from './login-reducer';\r\nimport {AppRootStateType} from '../../app/store';\r\n\r\ninterface ValuesType {\r\n    email: string\r\n    password: string\r\n}\r\n\r\ntype PropsType = {\r\n    onSubmit: (data: ValuesType) => void\r\n}\r\n\r\nconst LoginForm: FC<PropsType> = props => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: ValuesType) => {\r\n       props.onSubmit(values);\r\n    };\r\n\r\n    return (\r\n        <div className={style.login}>\r\n            <div className={style.title}>Cards</div>\r\n            <div className={style.titleName}>\r\n                <h3>Sign In</h3>\r\n            </div>\r\n            <Form name={'login'}\r\n                  className={style.form}\r\n                  {...formItemLayout}\r\n                  form={form}\r\n                  onFinish={onFinish}>\r\n                {fieldComponent('email', 'E-mail')}\r\n                {fieldComponent('password', 'Password')}\r\n                <div className={style.forgot}>\r\n                    <span>\r\n                        <NavLink to={'/recovery-password'}>\r\n                            Forgot Password\r\n                        </NavLink>\r\n                    </span>\r\n                </div>\r\n                <div className={style.buttons}>\r\n                    <button className={style.btnLogin} type=\"submit\">\r\n                        Login\r\n                    </button>\r\n                </div>\r\n                <div className={style.signUp}>\r\n                    <span>Don't have an account?</span>\r\n                    <NavLink to={\"/registration\"}>Sign Up</NavLink>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nexport const Login: FC = memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const isAuth = useSelector<AppRootStateType,boolean>(state => state.login.isAuth);\r\n\r\n    if (isAuth){\r\n        return <Redirect to={\"/\"}/>\r\n    }\r\n\r\n    const submit = (data: ValuesType) => {\r\n        dispatch(loginAccount(data))\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <LoginForm onSubmit={submit}/>\r\n        </>\r\n    )\r\n})","import React, {FC, memo} from 'react'\r\nimport {Redirect, useParams} from \"react-router-dom\";\r\nimport {setNewPassword} from \"./new-password-reducer\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {Form} from \"antd\";\r\nimport style from './NewPasswordStyle.module.scss'\r\nimport {fieldComponent} from \"../CommonComponentsForm/FieldComponent\";\r\nimport {formItemLayout} from \"../Registration/Registration\";\r\n\r\ninterface NewPasswordValuesType {\r\n    password: string\r\n    confirmPassword: string\r\n}\r\ntype NewPasswordFormPropsType = {\r\n    onSubmit: (data: NewPasswordValuesType) => void\r\n}\r\n\r\nexport const NewPasswordForm: FC<NewPasswordFormPropsType> = memo(({onSubmit}) => {\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: NewPasswordValuesType) => {\r\n       onSubmit(values);\r\n    };\r\n    return (\r\n        <div className={style.newPasswordMain}>\r\n            <div className={style.title}>Cards</div>\r\n            <div className={style.titleName}>\r\n                <h3>Create new password</h3>\r\n                {/*todo разобраться с размерами*/}\r\n            </div>\r\n            <Form name={'newPassword'}\r\n                  className={style.form}\r\n                  form={form}\r\n                  onFinish={onFinish}\r\n                  {...formItemLayout}\r\n            >\r\n                {fieldComponent('password', 'Password')}\r\n                {fieldComponent('confirm', 'Confirm Password')}\r\n                <div className={style.buttons}>\r\n                    <button className={style.btnSetPass} type=\"submit\">\r\n                        Create new password\r\n                    </button>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport const NewPasswordComponent: FC = memo(() => {\r\n    const dispatch = useDispatch();\r\n    const { token } = useParams<{token: string}>();\r\n    const changePasswordStatus = useSelector<AppRootStateType, boolean>(state => state.creatingPasswordInfo.setPasswordStatus);\r\n\r\n    if (changePasswordStatus) {\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    const submit = (data: NewPasswordValuesType) => {\r\n        let {password} = data;\r\n       dispatch(setNewPassword({password, resetPasswordToken: token}));\r\n    }\r\n    return (\r\n        <>\r\n            <NewPasswordForm onSubmit={submit}/>\r\n        </>\r\n    )\r\n})","import React, {FC, memo} from 'react'\r\nimport {Form} from \"antd\";\r\nimport style from \"../RecoveryPassword/RecoveryPasswordStyle.module.scss\";\r\nimport {fieldComponent} from \"../CommonComponentsForm/FieldComponent\";\r\nimport {formItemLayout} from \"../Registration/Registration\";\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {AppRootStateType} from \"../../app/store\";\r\nimport {recoveryPassword} from \"./recovery-password-reducer\";\r\nimport {RecoveryMessage} from \"../utils/utils\";\r\n\r\ninterface ValuesType {\r\n    email: string\r\n}\r\n\r\ntype PropsType = {\r\n    onSubmit: (data: ValuesType) => void\r\n}\r\n\r\nexport const FormRecoveryPassword: FC<PropsType> = props => {\r\n\r\n    const [form] = Form.useForm();\r\n\r\n    const onFinish = (values: ValuesType) => {\r\n        props.onSubmit(values);\r\n    };\r\n\r\n    return (\r\n        <div className={style.recoveryPassword}>\r\n            <div className={style.title}>Cards</div>\r\n            <div className={style.titleName}>\r\n                <h3>Forgot your password?</h3>\r\n            </div>\r\n            <Form name={'forgot password'}\r\n                  className={style.form}\r\n                  {...formItemLayout}\r\n                  form={form}\r\n                  onFinish={onFinish}>\r\n                {fieldComponent('email', 'E-mail')}\r\n                <div className={style.subtitle}>\r\n                    Enter your email address and we will send you future instructions\r\n                </div>\r\n                <div className={style.buttons}>\r\n                    <button className={style.btnSend} type=\"submit\">\r\n                        Send Instructions\r\n                    </button>\r\n                </div>\r\n                <div className={style.signUp}>\r\n                    <span>Did you remember your password?</span>\r\n                    <NavLink to={\"/login\"}>Try logging in</NavLink>\r\n                </div>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const RecoveryPassword: FC = memo(() => {\r\n    const isSend = useSelector<AppRootStateType, boolean>(state => state.recovery.isSend)\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const sendData = (data: ValuesType) => {\r\n        debugger\r\n        dispatch(recoveryPassword({\r\n            email: data.email,\r\n            from: \"test-front-admin <ai73a@yandex.by>\",\r\n            message: RecoveryMessage()\r\n        }))\r\n    }\r\n    if(isSend){\r\n        return <Redirect to={'/chek-email'}/>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <FormRecoveryPassword onSubmit={sendData}/>\r\n        </>\r\n    )\r\n})","import React, {FC} from 'react'\r\nimport {ProfileType} from '../../api/api';\r\n\r\ntype PropsType = {\r\n    profile:ProfileType\r\n    logOut: () => void\r\n}\r\n\r\nexport const Profile:FC<PropsType> = props => {\r\n\r\n    let profile = '';\r\n    if (props.profile) {\r\n        profile = 'Hello user';\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>{profile}</div>\r\n            <div>\r\n                <button onClick={props.logOut}>Logout</button>\r\n            </div>\r\n        </>\r\n    )\r\n}","import React, {memo} from 'react'\r\nimport {Profile} from './Profile';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../../app/store';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {logoutAccount} from '../Login/login-reducer';\r\nimport {ProfileType} from '../../api/api';\r\n\r\n\r\nexport const ProfileContainer = memo(() => {\r\n\r\n    const dispatch = useDispatch();\r\n    const profile = useSelector<AppRootStateType,ProfileType>(state => state.profile);\r\n    const isAuth = useSelector<AppRootStateType,boolean>(state => state.login.isAuth);\r\n\r\n    if (!isAuth){\r\n        return <Redirect to={\"/login\"}/>\r\n    }\r\n\r\n    const logOut = () => {\r\n        dispatch(logoutAccount());\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Profile profile={profile} logOut={logOut}/>\r\n        </>\r\n    )\r\n});\r\n","import React from \"react\";\r\nimport s from './Preloader.module.css'\r\n\r\nexport const Preloader = () => {\r\n    return(\r\n        <div className={s.preloader}>\r\n            <div className={s.preloader__image_animate}>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React, {FC} from 'react'\r\n\r\nexport const ChekEmail: FC = () => {\r\n    return(\r\n        <h1>Chek your email</h1>\r\n    )\r\n}","import React, {useEffect} from 'react'\r\nimport {Redirect, Route, Switch} from 'react-router-dom';\r\nimport {Error404} from '../components/Error404/Error404';\r\nimport {Login} from './Login/Login';\r\nimport {Registration} from './Registration/Registration';\r\nimport {NewPasswordComponent} from './NewPassword/NewPassword';\r\nimport {RecoveryPassword} from './RecoveryPassword/RecoveryPassword';\r\nimport {ProfileContainer} from './Profile/ProfileContainer';\r\nimport {useDispatch, useSelector} from 'react-redux';\r\nimport {AppRootStateType} from '../app/store';\r\nimport {initializeApp} from './Login/login-reducer';\r\nimport {Preloader} from '../components/Preloader/Preloader';\r\nimport {ChekEmail} from \"../components/ChekEmail/ChekEmail\";\r\n\r\nexport const PATH = {\r\n    LOGIN: '/login',\r\n    PROFILE: '/profile',\r\n    REGISTRATION: '/registration',\r\n    NEW_PASSWORD: '/set-new-password/:token?',\r\n    RECOVERY_PASSWORD: '/recovery-password',\r\n    CHEK_EMAIL: '/chek-email',\r\n\r\n}\r\n\r\nexport const Routes = () => {\r\n    const dispatch = useDispatch();\r\n    const isInit = useSelector<AppRootStateType, boolean>(state => state.login.isInitialize);\r\n\r\n    useEffect(() => {\r\n        dispatch(initializeApp());\r\n    }, [dispatch])\r\n\r\n    if (!isInit) {\r\n        return <div><Preloader/></div>\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Switch>\r\n                <Route path={'/'} exact render={() => <Redirect to={PATH.PROFILE}/>}/>\r\n                <Route path={PATH.LOGIN} render={() => <Login/>}/>\r\n                <Route path={PATH.PROFILE} render={() => <ProfileContainer/>}/>\r\n                <Route path={PATH.REGISTRATION} render={() => <Registration/>}/>\r\n                <Route path={PATH.NEW_PASSWORD} render={() => <NewPasswordComponent/>}/>\r\n                <Route path={PATH.RECOVERY_PASSWORD} render={() => <RecoveryPassword/>}/>\r\n                <Route path={PATH.CHEK_EMAIL} render={() => <ChekEmail/>}/>\r\n                {/*у этого роута нет пути, он отрисуется если пользователь захочет попасть на несуществующую страницу*/}\r\n                <Route render={() => <Error404/>}/>\r\n            </Switch>\r\n        </>\r\n    );\r\n};","import React from 'react';\r\nimport {Routes} from '../features/Routes';\r\nimport style from './AppStyle.module.scss';\r\n\r\n\r\nexport const App = () => {\r\n\r\n  return (\r\n    <div className={style.page}>\r\n      <Routes/>\r\n    </div>\r\n  )\r\n};\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport {Provider} from \"react-redux\";\r\nimport {store} from \"./app/store\";\r\nimport {HashRouter} from 'react-router-dom';\r\nimport {App} from \"./app/App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n      <HashRouter>\r\n          <Provider store={store}>\r\n              <App />\r\n          </Provider>\r\n      </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"LoginStyle_login__1ZdBS\",\"title\":\"LoginStyle_title__f4CK7\",\"titleName\":\"LoginStyle_titleName__3R6q6\",\"form\":\"LoginStyle_form__3Tm9Y\",\"field\":\"LoginStyle_field__3KxjD\",\"input\":\"LoginStyle_input__y7mHH\",\"forgot\":\"LoginStyle_forgot__Lkegb\",\"buttons\":\"LoginStyle_buttons__2yQ1-\",\"btnLogin\":\"LoginStyle_btnLogin__2bBod\",\"signUp\":\"LoginStyle_signUp__2z2bw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"recoveryPassword\":\"RecoveryPasswordStyle_recoveryPassword__3Dxcn\",\"title\":\"RecoveryPasswordStyle_title__16SJH\",\"titleName\":\"RecoveryPasswordStyle_titleName__2eL6q\",\"subtitle\":\"RecoveryPasswordStyle_subtitle__Oekia\",\"field\":\"RecoveryPasswordStyle_field__dE0X8\",\"input\":\"RecoveryPasswordStyle_input__v-qoR\",\"buttons\":\"RecoveryPasswordStyle_buttons__2poX9\",\"btnSend\":\"RecoveryPasswordStyle_btnSend__2l-vH\",\"signUp\":\"RecoveryPasswordStyle_signUp__M4kPz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"RegistrationStyle_registration__3D2-Y\",\"title\":\"RegistrationStyle_title__RHLsn\",\"titleName\":\"RegistrationStyle_titleName__2QBt5\",\"form\":\"RegistrationStyle_form__3y5Tr\",\"field\":\"RegistrationStyle_field__2Nk0M\",\"input\":\"RegistrationStyle_input__3mpEb\",\"buttons\":\"RegistrationStyle_buttons__1O5IL\",\"btnCan\":\"RegistrationStyle_btnCan__3OqAl\",\"btnReg\":\"RegistrationStyle_btnReg__13swf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"field\":\"FieldComponentStyle_field__38tLJ\",\"input\":\"FieldComponentStyle_input__3Lg7-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPasswordMain\":\"NewPasswordStyle_newPasswordMain__3ty_8\",\"title\":\"NewPasswordStyle_title__1jUJB\",\"titleName\":\"NewPasswordStyle_titleName__Xw3F5\",\"form\":\"NewPasswordStyle_form__2HhaA\",\"buttons\":\"NewPasswordStyle_buttons__3rs-E\",\"btnSetPass\":\"NewPasswordStyle_btnSetPass__3Hye_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"Preloader_preloader__172fF\",\"preloader__image_animate\":\"Preloader_preloader__image_animate__2fTCQ\",\"up-down\":\"Preloader_up-down__2hFLc\"};"],"sourceRoot":""}